---
description: "ドキュメント作成と管理のガイドライン"
globs: ["**/*.md", "**/docs/**/*"]
---

# ドキュメント作成ガイドライン

## 1. 基本原則
- すべてのドキュメントは`docs`ディレクトリに集約
- Markdown形式で作成・管理
- 日本語ファイル名は許可されるが、スペースの代わりにアンダースコア(_)を使用
- 参照関係のあるドキュメント同士は相互リンクを明記
- 更新履歴を各ドキュメントの冒頭または末尾に記録

## 2. ディレクトリ構造
```
docs/
├── technical/  # API仕様書やスキーマ定義など技術的な詳細
│   ├── *-adr.md       # 設計決定記録（ADR）
│   ├── *-roadmap.md   # 実装ロードマップ
│   └── *-implementation.md # 実装詳細ドキュメント
├── user/       # ユーザー向けドキュメント
│   └── *.md           # 機能ガイドなど
└── design/     # 設計関連ドキュメント
    └── *.md           # ドメインモデル、アーキテクチャなど
```

## 3. ドキュメントタイプと作成方針

### 3.1 設計決定記録（ADR）
- **命名規則**: `{機能名}-adr.md`
- **格納場所**: `docs/technical/`
- **形式**: タイトル、ステータス、日付、背景、決定、根拠、影響の各セクションを含む
- **更新方針**: 基本的に不変。新しい決定は新しいADRとして記録

### 3.2 実装ロードマップ
- **命名規則**: `{機能名}-roadmap.md`
- **格納場所**: `docs/technical/`
- **形式**: 実装経過、成果物、メトリクス、今後の計画、技術的負債のセクションを含む
- **更新方針**: 実装フェーズの完了時と四半期レビュー時に更新

### 3.3 実装詳細ドキュメント
- **命名規則**: `{機能名}-implementation.md`
- **格納場所**: `docs/technical/`
- **形式**: 概要、型定義、主要ロジック、テスト戦略のセクションを含む
- **更新方針**: 実装の大幅な変更時に更新、コード変更と同PRで更新

### 3.4 ユーザーガイド
- **命名規則**: `{機能名}.md`
- **格納場所**: `docs/user/`
- **形式**: 概要、使用方法、FAQ、トラブルシューティングのセクションを含む
- **更新方針**: 機能の追加・変更時に更新、リリース前に最新化

## 4. ドキュメント作成のベストプラクティス

### 4.1 マークダウンの適切な使用
- 適切な見出しレベルを使用（#, ##, ###）
- コードブロックは言語指定を含める（```typescript）
- 表組みを活用して情報を整理
- 箇条書きとチェックリストで情報を構造化

### 4.2 相互参照の方法
- 相対パスを使用したリンク: `[ドメインモデル](../design/domain-model.md)`
- 同一ドキュメント内の見出し参照: `[実装の概要](#1-実装の概要)`

### 4.3 図表の活用
- PlantUML、Mermaid等のテキストベース図表言語を使用
- 図表には説明文を添える
- 複雑な概念は図解で説明

## 5. レビュープロセス
- 技術ドキュメントは少なくとも1名のレビューを受ける
- ユーザードキュメントは技術者以外のレビューも受ける
- ADRは設計に関わる全メンバーのレビューと承認を得る