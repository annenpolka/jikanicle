---
description: "プロジェクト全体の開発ルールとガイドライン"
globs: ["**/*"]
alwaysApply: false
---

# プロジェクト開発ルール

## 1. 開発準備

- 最初に`docs/document_rules.md`を参照し、タスクに関するドキュメントを作成
- 新しい機能開発時は関連するADRとロードマップも確認または作成
- `git status`でコンテキスト確認後、無関係な変更が多い場合は別タスクとして提案

## 2. 開発原則

### 2.1 ドメイン駆動設計（DDD）
- ユビキタス言語による共通理解の確立
- バウンデッドコンテキストで境界を明確化
- エンティティと値オブジェクトの適切な区別
- 集約による整合性の維持

### 2.2 テスト駆動開発（TDD）
- Red-Green-Refactorサイクルの遵守
- 実装前にテストを書く
- 小さな検証サイクルでフィードバックを早く得る
- 回帰防止のためのテスト作成

### 2.3 リファクタリングと継続的改善
- 動作を維持しながら構造改善
- コードスメルを検知して対応
- CI/CDを活用した継続的な統合と配信
- 進化的アーキテクチャの採用

### 2.4 関数型プログラミングの原則
- 純粋関数を優先し予測可能性を確保
- 不変性を重視し副作用を排除
- 高階関数を活用
- 宣言的プログラミングで意図を明確化
- 型安全性の確保

## 3. ドキュメント管理

- 詳細なドキュメント管理ガイドラインは`.cursor/rules/documentation.mdc`を参照
- コード変更に伴うドキュメント更新は同じPRで行う
- 技術的決定はADRとして記録
- 実装状況と計画はロードマップとして管理

