---
description: 作業開始時と進行中のワークフロー指針
globs: **/*
alwaysApply: true
---
## 作業ワークフロー
description: 作業開始時と進行中のワークフロー指針

### 作業開始準備
作業を開始する前に、現在のコンテキストを確認するために`git status`コマンドを実行します。これにより、作業環境の状態や変更内容を把握することができます。

無関係な変更が多い場合は、別タスクとして開始するか、変更をコミットまたはスタッシュしてからタスクを開始することを推奨します。

### 実装サイクル
1. 要件の理解と分析
2. 設計（型定義、インターフェース設計）
3. テスト作成（TDDアプローチ）
4. 実装（機能指向アプローチ）
5. リファクタリング
6. コードレビューと統合

### コードレビュー基準
- 型安全性：全ての型が適切に定義されているか
- テストカバレッジ：主要な機能と境界条件がテストされているか
- コード品質：不必要な複雑さや重複がないか
- パフォーマンス：非効率なアルゴリズムや処理がないか
- セキュリティ：潜在的な脆弱性がないか

### 技術的負債の管理
- TODO/FIXMEコメントを使用して後で対処すべき問題を明示
- 技術的負債はバックログに登録し、定期的に返済する時間を確保
- リファクタリングは小さな単位で継続的に実施

---
// コマンド例
git status
git diff
git add .
git commit -m "feat: 〇〇機能の実装"
---
